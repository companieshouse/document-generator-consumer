<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.gov.companieshouse</groupId>
    <artifactId>document-generator-consumer</artifactId>
    <version>unversioned</version>
    <packaging>jar</packaging>
    <name>document-generator-consumer</name>
    <description>Kafka consumer that hooks into the document-generator process asynchronously</description>

    <url>http://maven.apache.org</url>

    <parent>
        <groupId>uk.gov.companieshouse</groupId>
        <artifactId>companies-house-parent</artifactId>
        <version>2.1.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JDK Version -->
        <jdk.version>21</jdk.version>

        <!-- Dependancy Version -->
        <environment-reader-library.version>3.0.1</environment-reader-library.version>

        <!-- GSON Version -->
        <gson.version>2.11.0</gson.version>

        <!-- JUnit Testing -->
        <junit-jupiter-engine.version>5.11.0</junit-jupiter-engine.version>
        <mockito-junit-jupiter.version>5.12.0</mockito-junit-jupiter.version>

        <!-- Structured logging -->
        <structured-logging.version>3.0.12</structured-logging.version>

        <!-- Maven and Surefire plugins -->
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>

        <!-- Repositories -->
        <artifactoryResolveSnapshotRepo>libs-snapshot-local</artifactoryResolveSnapshotRepo>
        <artifactoryResolveReleaseRepo>libs-release-local</artifactoryResolveReleaseRepo>

        <!-- Avro -->
        <avro-maven-plugin.version>1.11.2</avro-maven-plugin.version>
        <avro.version>1.12.0</avro.version>

        <!-- Kafka -->
        <ch-kafka.version>3.0.3</ch-kafka.version>
        <kafka-models.version>3.0.8</kafka-models.version>

        <!-- Sonar -->
        <sonar-maven-plugin.version>4.0.0.4121</sonar-maven-plugin.version>
        <sonar.host.url>${CODE_ANALYSIS_HOST_URL}</sonar.host.url>
        <sonar.login>${CODE_ANALYSIS_LOGIN}</sonar.login>
        <sonar.password>${CODE_ANALYSIS_PASSWORD}</sonar.password>

        <!-- Jacoco -->
        <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>

        <commons-io.version>2.17.0</commons-io.version>
        <jib-maven-plugin.version>3.4.2</jib-maven-plugin.version>
        <spring-boot-dependencies.version>3.3.4</spring-boot-dependencies.version>
        <spring-boot-maven-plugin.version>3.3.4</spring-boot-maven-plugin.version>
        <spring-webmvc.version>6.1.14</spring-webmvc.version>
        <json.version>20240303</json.version>
        <commons-compress.version>1.27.1</commons-compress.version>
        <eclipse.jetty.version>12.0.14</eclipse.jetty.version>
        <plexus-utils.version>4.0.2</plexus-utils.version>
        <api-sdk-java.version>6.0.19</api-sdk-java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
            <version>${spring-boot-dependencies.version} </version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring-boot-dependencies.version} </version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring-boot-dependencies.version} </version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
            <version>${spring-boot-dependencies.version} </version>
        </dependency>
        <dependency>
            <groupId>uk.gov.companieshouse</groupId>
            <artifactId>kafka-models</artifactId>
            <version>${kafka-models.version}</version>
        </dependency>
        <dependency>
            <groupId>uk.gov.companieshouse</groupId>
            <artifactId>environment-reader-library</artifactId>
            <version>${environment-reader-library.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter-engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>uk.gov.companieshouse</groupId>
            <artifactId>structured-logging</artifactId>
            <version>${structured-logging.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
         <dependency>
            <groupId>uk.gov.companieshouse</groupId>
            <artifactId>ch-kafka</artifactId>
            <version>${ch-kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>${sonar-maven-plugin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-webmvc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring-webmvc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${commons-compress.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
            <version>${eclipse.jetty.version}</version>
        </dependency>
     <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${eclipse.jetty.version}</version>
    </dependency>
        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>${plexus-utils.version}</version>
        </dependency>
    </dependencies>

    <profiles>
        <!-- release-publish is the profile that is activated when the build server builds and
             publishes a release project to the cloud artifactory -->
        <profile>
            <id>release-publish</id>
            <activation>
                <property>
                    <name>publishRepo</name>
                    <value>release</value>
                </property>
            </activation>
            <properties>
                <artifactoryReleasePublishRepo>libs-release-local</artifactoryReleasePublishRepo>
            </properties>
            <distributionManagement>
                <repository>
                    <id>ch-artifactory</id>
                    <url>${MAVEN_REPOSITORY_URL}/${artifactoryReleasePublishRepo}</url>
                </repository>
            </distributionManagement>
        </profile>
        <!-- dev-publish is the profile that is activated when the build server builds and publishes
             a dev snapshot project to the cloud artifactory -->
        <profile>
            <id>dev-publish</id>
            <activation>
                <property>
                    <name>publishRepo</name>
                    <value>dev</value>
                </property>
            </activation>
            <properties>
                <artifactoryDevPublishRepo>libs-snapshot-local</artifactoryDevPublishRepo>
            </properties>
            <distributionManagement>
                <repository>
                    <id>ch-artifactory</id>
                    <url>${MAVEN_REPOSITORY_URL}/${artifactoryDevPublishRepo}</url>
                </repository>
            </distributionManagement>
        </profile>
        <!-- dev is the profile that is activated by default. This is only for developers as it does
             not publish to any repository. It just downloads dependencies, compiles code and builds jar
             for running the application and then runs the tests. -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <finalName>${project.artifactId}-${project.version}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <mainClass>uk.gov.companieshouse.document.generator.consumer.DocumentGeneratorConsumerApplication
                            </mainClass>
                            <layout>ZIP</layout>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <source>${jdk.version}</source>
                            <target>${jdk.version}</target>
                            <fork>true</fork>
                            <meminitial>128m</meminitial>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <maxmem>512m</maxmem>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>${maven-jar-plugin.version}</version>
                    </plugin>

                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default-prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-report</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${jib-maven-plugin.version}</version>
                        <configuration>
                            <from>
                                <image>416670754337.dkr.ecr.eu-west-2.amazonaws.com/ci-corretto-build-21:latest</image>
                            </from>
                            <to>
                                <image>416670754337.dkr.ecr.eu-west-2.amazonaws.com/local/document-generator-consumer:latest</image>
                            </to>
                            <container>
                                <expandClasspathDependencies>true</expandClasspathDependencies>
                            </container>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${sonar-maven-plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>ch-artifactory-release</id>
            <url>${MAVEN_REPOSITORY_URL}/${artifactoryResolveReleaseRepo}</url>
        </repository>
        <repository>
            <id>ch-artifactory-snapshot</id>
            <url>${MAVEN_REPOSITORY_URL}/${artifactoryResolveSnapshotRepo}</url>
        </repository>
    </repositories>
</project>
